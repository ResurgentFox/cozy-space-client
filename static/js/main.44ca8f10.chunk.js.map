{"version":3,"sources":["assets/asteroid.svg","PostItem.tsx","PostsList.tsx","Data.ts","PostSendForm.tsx","Loader.tsx","App.tsx","index.tsx"],"names":["PostMessage","styled","div","UserData","UserName","PostUploadTime","time","TextMessage","PostItem","props","Date","timestamp","toLocaleString","navigator","language","hour","minute","name","text","List","PostsList","posts","map","item","_id","serverAddress","process","Posts","ws","handleNewPost","this","WebSocket","setWsHeartbeat","pingTimeout","pingInterval","onmessage","event","data","parsed","JSON","parse","callback","fetch","post","Form","Input","input","Textarea","textarea","Button","button","Label","label","ErrorText","ErrorTextSmall","PostSendForm","React","setName","setText","validName","setValidName","validText","setValidText","hasError","setHasError","onButtonClick","trim","onSend","value","onChange","e","target","onBlur","onKeyPress","key","preventDefault","onClick","Loader","style","display","justifyContent","margin","className","Wrapper","section","Main","Title","h1","Img","img","postsInteractive","App","useState","setPosts","loading","setLoading","a","sendPost","fetchPosts","getPosts","newPosts","wait","json","useEffect","onNewPost","newPost","src","asteroid","alt","ms","Promise","resolve","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44ca8f10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/asteroid.7252a113.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst PostMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 900;\r\n`\r\n\r\nconst UserData = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  padding: 0 25px;\r\n`\r\n\r\nconst UserName = styled.div`\r\n  color: #746087;\r\n  font-size: 12px;\r\n`\r\n\r\nconst PostUploadTime = styled.time`\r\n  font-size: 12px;\r\n  color: #6c6c6c;\r\n`\r\n\r\nconst TextMessage = styled.div`\r\n  max-width: 400px;\r\n  min-height: 50px;\r\n  padding: 15px;\r\n  border-radius: 30px;\r\n  background-color: #7984e8;\r\n  font-size: 14px;\r\n  word-wrap: break-word;\r\n`\r\n\r\ninterface Props {\r\n  name: string\r\n  timestamp: number\r\n  text: string\r\n}\r\n\r\nexport function PostItem(props: Props) {\r\n  const time = new Date(props.timestamp).toLocaleString(navigator.language, {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  })\r\n  \r\n  return (\r\n    <PostMessage>\r\n      <UserData>\r\n        <UserName>{props.name}</UserName>\r\n        <PostUploadTime>{time}</PostUploadTime>\r\n      </UserData>\r\n      <TextMessage>{props.text}</TextMessage>\r\n    </PostMessage>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { PostItem } from './PostItem'\r\nimport { FullPost } from './types'\r\n\r\nconst List = styled.div`\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > *:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  posts: FullPost[]\r\n}\r\n\r\nexport function PostsList(props: Props) {\r\n  return (\r\n    <List>\r\n      {props.posts.map((item) => (\r\n        <PostItem\r\n          key={item._id}\r\n          name={item.name}\r\n          timestamp={item.timestamp}\r\n          text={item.text}\r\n        />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n","import { FullPost, Post } from './types'\r\nimport { setWsHeartbeat } from 'ws-heartbeat/client'\r\n\r\nconst serverAddress = process.env.REACT_APP_URL || '127.0.0.1:3001'\r\n\r\nexport class Posts {\r\n  private ws: WebSocket\r\n  private handleNewPost?: (post: FullPost) => void \r\n  \r\n  constructor() {\r\n    this.ws = new WebSocket(`wss://${serverAddress}`)\r\n    setWsHeartbeat(this.ws, '{\"kind\":\"ping\"}', {\r\n      pingTimeout: 60000,\r\n      pingInterval: 25000, \r\n    })\r\n    this.ws.onmessage = event => { \r\n      const { data } = event\r\n      const parsed = JSON.parse(data)\r\n      if (parsed.name && parsed.text) {\r\n        this.handleNewPost?.(parsed)\r\n      } \r\n    }\r\n  }\r\n\r\n  onNewPost(callback: (post: FullPost) => void) {\r\n    this.handleNewPost = callback\r\n  }\r\n\r\n  getPosts() {\r\n    return fetch(`https://${serverAddress}/get_posts`)\r\n  }\r\n  sendPost(post: Post) {\r\n    return fetch(`https://${serverAddress}/send_post?name=${post.name}&text=${post.text}`)\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from './types'\r\n\r\nconst Form = styled.div`\r\n  top: 0;\r\n  position: sticky;\r\n  margin: 0 auto;\r\n  margin-bottom: 5%;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\n\r\nconst ErrorText = styled.div`\r\n  font-family: 'Tourney', cursive;\r\n  margin-top: 3rem;\r\n  margin-bottom: 5%;\r\n  padding: 8px;\r\n  color: #4ef2e7;\r\n  text-align: center; \r\n  font-size: 20px;     \r\n  font-weight: 600;\r\n  border: 2px solid  #4ef2e7;\r\n  border-radius: 15px; \r\n  max-width: 400px;\r\n  max-height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ErrorTextSmall = styled.div`\r\n  color: #4ef2e7;\r\n  font-size: 14px; \r\n  min-height: 14px;\r\n  margin-bottom: 2px;\r\n`\r\n\r\ninterface Props {\r\n  onSend: (post: Post) => void\r\n}\r\n\r\nexport function PostSendForm(props: Props) {\r\n  const [name, setName] = React.useState('')\r\n  const [text, setText] = React.useState('')\r\n\r\n  const [validName, setValidName] = React.useState(true)\r\n  const [validText, setValidText] = React.useState(true)\r\n  const [hasError, setHasError] = React.useState(false);\r\n\r\n  const onButtonClick = () => {\r\n    const post: Post = {\r\n      name,\r\n      text,\r\n    }\r\n    \r\n    if (name.trim() && text.trim()){\r\n      props.onSend(post) \r\n      setHasError(false)\r\n    } else {\r\n      setHasError(true)\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  const onKeyEnter = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onButtonClick()\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  const onNameBlur = () => { \r\n    setValidName(!!name)\r\n  }\r\n\r\n  const onTextBlur = () => {\r\n    setValidText(!!text)\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Label>Your name</Label>\r\n      <ErrorTextSmall>{!validName ? 'Please enter the name!' : ''}</ErrorTextSmall>\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)} \r\n        onBlur={onNameBlur}\r\n      />\r\n      <Label>Share what`s in your mind</Label>\r\n      <ErrorTextSmall>{!validText ? 'You can`t send empty messages :c' : ''}</ErrorTextSmall>\r\n      <Textarea\r\n        value={text}\r\n        onKeyPress={onKeyEnter}\r\n        onChange={(e) => setText(e.target.value)}     \r\n        onBlur={onTextBlur}\r\n      />\r\n      <Button onClick={onButtonClick}>go!</Button>\r\n      {hasError && <ErrorText>! You need to fill name and text areas !</ErrorText>}\r\n    </Form>\r\n  )\r\n}\r\n","export const Loader = () => {\r\n  return (\r\n    <div style={{display: 'flex', justifyContent: 'center', margin: '.5rem'}}>\r\n      <div className=\"loadingio-spinner-bean-eater-hwm2danfbfh\">\r\n        <div className=\"ldio-fgtgkv4yzh6\">\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport asteroid from './assets/asteroid.svg'\r\nimport { PostsList } from './PostsList'\r\nimport { Posts } from './Data'\r\nimport { PostSendForm } from './PostSendForm'\r\nimport { Post, FullPost } from './types'\r\nimport { Loader } from './Loader'\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 20px 15px;\r\n`\r\nconst Main = styled.section`\r\n  height: 100vh;\r\n`\r\nconst Title = styled.h1`\r\n  font-size: 56px;\r\n  line-height: 80px;\r\n  text-align: center;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 600;\r\n  background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  @media (max-width: 320px) {\r\n    margin-top: 5px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  max-width: 100%;\r\n`\r\n\r\nconst postsInteractive = new Posts()\r\n\r\nexport function App() {\r\n  const [posts, setPosts] = React.useState<FullPost[]>([])\r\n  const [loading, setLoading] = React.useState(false)\r\n\r\n  const onSend = async (post: Post) => {\r\n    await postsInteractive.sendPost(post)\r\n  }\r\n\r\n  const fetchPosts = async () => {\r\n    setLoading(true)\r\n    const newPosts = await postsInteractive.getPosts()\r\n    await wait(3000)\r\n    setPosts(await newPosts.json())\r\n    setLoading(false)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchPosts()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    postsInteractive.onNewPost((newPost) => {\r\n      const newPosts = [newPost, ...posts]\r\n      setPosts(newPosts)\r\n    })\r\n  }, [posts])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Main>\r\n        <Title>\r\n          Cozy Space <Img src={asteroid} alt=\"Asteroid\" />\r\n        </Title>\r\n        {loading ? <Loader /> : <PostSendForm onSend={onSend} />}\r\n      </Main>\r\n      <PostsList posts={posts} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction wait(ms: number) {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}