{"ast":null,"code":"import _slicedToArray from\"D:/programming/network.v1/cozy-space-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"D:/programming/network.v1/cozy-space-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import*as React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  top: 0;\\n  position: sticky;\\n  margin: 0 auto;\\n  margin-bottom: 5%;\\n  padding-top: 5%;\\n  @media (max-width: 320px) {\\n    padding-top: 5px;\\n  }\\n\\n  max-width: 400px;\\n  display: flex;\\n  flex-direction: column;\\n\"])));var Input=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  background-color: #746087;\\n  border: 1px solid #1e1d1f;\\n  border-radius: 10px;\\n  outline: none;\\n  font-family: 'Tourney', cursive;\\n  font-weight: 800;\\n\"])));var Textarea=styled.textarea(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  resize: none;\\n  min-height: 100px;\\n  padding: 10px;\\n  border-radius: 15px;\\n  outline: none;\\n  border: 1px solid #1e1d1f;\\n  background-color: #746087;\\n  font-family: 'Tourney', cursive;\\n  font-weight: 800;\\n\"])));var Button=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-top: 7%;\\n  max-width: 120px;\\n  max-height: 40px;\\n  outline: none;\\n  border-radius: 30px;\\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\\n  border: transparent;\\n  color: #000;\\n  font-size: 28px;\\n  font-family: 'Bungee Shade', cursive;\\n  font-weight: 900;\\n  cursor: pointer;\\n  letter-spacing: 1px;\\n  text-transform: uppercase;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition-duration: 0.5s;\\n  top: 0;\\n  position: relative;\\n  &:hover {\\n    top: 5px;\\n  }\\n\"])));var Label=styled.label(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 25px;\\n  margin-bottom: 8px;\\n  color: #746087;\\n  font-size: 20px;\\n  font-family: 'Tourney', cursive;\\n\"])));var ErrorText=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-family: 'Tourney', cursive;\\n  margin-top: 3rem;\\n  margin-bottom: 5%;\\n  padding: 8px;\\n  color: #4ef2e7;\\n  text-align: center; \\n  font-size: 20px;     \\n  font-weight: 600;\\n  border: 2px solid  #4ef2e7;\\n  border-radius: 15px; \\n  max-width: 400px;\\n  max-height: 100px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));var ErrorTextSmall=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: #4ef2e7;\\n  font-size: 14px; \\n  min-height: 14px;\\n  margin-bottom: 2px;\\n\"])));export function PostSendForm(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),text=_React$useState4[0],setText=_React$useState4[1];var _React$useState5=React.useState(true),_React$useState6=_slicedToArray(_React$useState5,2),validName=_React$useState6[0],setValidName=_React$useState6[1];var _React$useState7=React.useState(true),_React$useState8=_slicedToArray(_React$useState7,2),validText=_React$useState8[0],setValidText=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),hasError=_React$useState10[0],setHasError=_React$useState10[1];var onButtonClick=function onButtonClick(){var post={name:name,text:text};if(name.trim()&&text.trim()){props.onSend(post);setHasError(false);}else{setHasError(true);}setText('');};var onKeyEnter=function onKeyEnter(e){if(e.key==='Enter'){onButtonClick();e.preventDefault();}};var onNameBlur=function onNameBlur(){setValidName(!!name);};var onTextBlur=function onTextBlur(){setValidText(!!text);};return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Label,{children:\"Your name\"}),/*#__PURE__*/_jsx(ErrorTextSmall,{children:!validName?'Please enter the name!':''}),/*#__PURE__*/_jsx(Input,{value:name,onChange:function onChange(e){return setName(e.target.value);},onBlur:onNameBlur}),/*#__PURE__*/_jsx(Label,{children:\"Share what`s in your mind\"}),/*#__PURE__*/_jsx(ErrorTextSmall,{children:!validText?'You can`t send empty messages :c':''}),/*#__PURE__*/_jsx(Textarea,{value:text,onKeyPress:onKeyEnter,onChange:function onChange(e){return setText(e.target.value);},onBlur:onTextBlur}),/*#__PURE__*/_jsx(Button,{onClick:onButtonClick,children:\"go!\"}),hasError&&/*#__PURE__*/_jsx(ErrorText,{children:\"! You need to fill name and text areas !\"})]});}","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostSendForm.tsx"],"names":["React","styled","Form","div","Input","input","Textarea","textarea","Button","button","Label","label","ErrorText","ErrorTextSmall","PostSendForm","props","useState","name","setName","text","setText","validName","setValidName","validText","setValidText","hasError","setHasError","onButtonClick","post","trim","onSend","onKeyEnter","e","key","preventDefault","onNameBlur","onTextBlur","target","value"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from './types'\r\n\r\nconst Form = styled.div`\r\n  top: 0;\r\n  position: sticky;\r\n  margin: 0 auto;\r\n  margin-bottom: 5%;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  resize: none;\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\n\r\nconst ErrorText = styled.div`\r\n  font-family: 'Tourney', cursive;\r\n  margin-top: 3rem;\r\n  margin-bottom: 5%;\r\n  padding: 8px;\r\n  color: #4ef2e7;\r\n  text-align: center; \r\n  font-size: 20px;     \r\n  font-weight: 600;\r\n  border: 2px solid  #4ef2e7;\r\n  border-radius: 15px; \r\n  max-width: 400px;\r\n  max-height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ErrorTextSmall = styled.div`\r\n  color: #4ef2e7;\r\n  font-size: 14px; \r\n  min-height: 14px;\r\n  margin-bottom: 2px;\r\n`\r\n\r\ninterface Props {\r\n  onSend: (post: Post) => void\r\n}\r\n\r\nexport function PostSendForm(props: Props) {\r\n  const [name, setName] = React.useState('')\r\n  const [text, setText] = React.useState('')\r\n\r\n  const [validName, setValidName] = React.useState(true)\r\n  const [validText, setValidText] = React.useState(true)\r\n  const [hasError, setHasError] = React.useState(false);\r\n\r\n  const onButtonClick = () => {\r\n    const post: Post = {\r\n      name,\r\n      text,\r\n    }\r\n    \r\n    if (name.trim() && text.trim()){\r\n      props.onSend(post) \r\n      setHasError(false)\r\n    } else {\r\n      setHasError(true)\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  const onKeyEnter = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onButtonClick()\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  const onNameBlur = () => { \r\n    setValidName(!!name)\r\n  }\r\n\r\n  const onTextBlur = () => {\r\n    setValidText(!!text)\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Label>Your name</Label>\r\n      <ErrorTextSmall>{!validName ? 'Please enter the name!' : ''}</ErrorTextSmall>\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)} \r\n        onBlur={onNameBlur}\r\n      />\r\n      <Label>Share what`s in your mind</Label>\r\n      <ErrorTextSmall>{!validText ? 'You can`t send empty messages :c' : ''}</ErrorTextSmall>\r\n      <Textarea\r\n        value={text}\r\n        onKeyPress={onKeyEnter}\r\n        onChange={(e) => setText(e.target.value)}     \r\n        onBlur={onTextBlur}\r\n      />\r\n      <Button onClick={onButtonClick}>go!</Button>\r\n      {hasError && <ErrorText>! You need to fill name and text areas !</ErrorText>}\r\n    </Form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}