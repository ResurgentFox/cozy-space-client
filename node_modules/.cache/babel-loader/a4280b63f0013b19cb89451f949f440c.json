{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport asteroid from \"./assets/asteroid.svg\";\nimport { PostsList } from './PostsList';\nimport { Posts } from './Data';\nimport { PostSendForm } from './PostSendForm'; // import { currentTime } from './PostsTime'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.section`\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 0 20px 15px;\n`;\n_c = Wrapper;\nconst Main = styled.section`\n  height: 100vh;\n`;\n_c2 = Main;\nconst Title = styled.h1`\n  font-size: 56px;\n  line-height: 80px;\n  text-align: center;\n  font-family: 'Tourney', cursive;\n  font-weight: 600;\n  background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  @media (max-width: 320px) {\n    margin-top: 5px;\n    margin-bottom: 0;\n  }\n`;\n_c3 = Title;\nconst Img = styled.img`\n  width: 60px;\n  height: 60px;\n  max-width: 100%;\n`; // export class Time extends React.Component {\n//   constructor() {\n//     super()\n//     const today = new Date(),\n//     time = today.getHours() + ':' + today.getMinutes()\n//     this.state = {\n//       currentTime : time\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <p>\n//           { this.state.currentTime }\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n\n_c4 = Img;\nconst postsInteractive = new Posts();\nexport function App() {\n  _s();\n\n  const [posts, setPosts] = React.useState(postsInteractive.getPosts());\n  /** @param {{name: string, text: string, date: string}} post */\n\n  const onSend = post => {\n    const newPost = {\n      key: '',\n      name: post.name,\n      text: post.text,\n      date: date.toLocaleTimeString()\n    };\n    const allPosts = posts.concat(newPost);\n    setPosts(allPosts);\n  };\n\n  const date = new Date(Date.now());\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Cozy Space \", /*#__PURE__*/_jsxDEV(Img, {\n          src: asteroid,\n          alt: \"Asteroid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostSendForm, {\n        onSend: onSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n} // когда мы нажмем на кнопку, сначала сработает onButtonClick в PostSendForm, \n// а оттуда мы вызваем props.onSend(post) - как раз эту функцию\n// заметь, что мы передаем в onSend post, а значит тут можем его принять, это просто параметр функции\n// у нас есть posts (в стейте) стоп покажи еще раз наш стейт...просто вот юз стейт? это весь стейт типа? \n// useState мы создали стейт и сохранили его значение в posts (массив)\n// А еще есть новый пост (post). Нам надо новый пост сконккетить с текущими (concat)\n// А результат объединения сделать новым стейтом (обновить posts через setPosts)\n// пока так, можно вниз унести ща\n\n_s(App, \"mcKzRmhIFl4OEwmfdhpSVwyoKDc=\");\n\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Img\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/App.js"],"names":["React","styled","PostsList","Posts","PostSendForm","Wrapper","section","Main","Title","h1","Img","img","postsInteractive","App","posts","setPosts","useState","getPosts","onSend","post","newPost","key","name","text","date","toLocaleTimeString","allPosts","concat","Date","now","asteroid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CACA;;;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,OAAQ;AAC/B;AACA;AACA;AACA,CAJA;KAAMD,O;AAKN,MAAME,IAAI,GAAGN,MAAM,CAACK,OAAQ;AAC5B;AACA,CAFA;MAAMC,I;AAGN,MAAMC,KAAK,GAAGP,MAAM,CAACQ,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,K;AAgBN,MAAME,GAAG,GAAGT,MAAM,CAACU,GAAI;AACvB;AACA;AACA;AACA,CAJA,C,CAMA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MA1BMD,G;AA+BN,MAAME,gBAAgB,GAAG,IAAIT,KAAJ,EAAzB;AAEA,OAAO,SAASU,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACgB,QAAN,CAAeJ,gBAAgB,CAACK,QAAjB,EAAf,CAA1B;AAEA;;AAEA,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAMC,OAAO,GAAG;AACdC,MAAAA,GAAG,EAAE,EADS;AAEdC,MAAAA,IAAI,EAAEH,IAAI,CAACG,IAFG;AAGdC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IAHG;AAIdC,MAAAA,IAAI,EAAEA,IAAI,CAACC,kBAAL;AAJQ,KAAhB;AAMA,UAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAaP,OAAb,CAAjB;AACAL,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD,GATD;;AAWA,QAAMF,IAAI,GAAG,IAAII,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAb;AAEA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAA,+CACa,QAAC,GAAD;AAAK,UAAA,GAAG,EAAEC,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAKD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;GA1CgBD,G;;MAAAA,G","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport asteroid from './assets/asteroid.svg'\r\nimport { PostsList } from './PostsList'\r\nimport { Posts } from './Data'\r\nimport { PostSendForm } from './PostSendForm'\r\n// import { currentTime } from './PostsTime'\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 20px 15px;\r\n`\r\nconst Main = styled.section`\r\n  height: 100vh;\r\n`\r\nconst Title = styled.h1`\r\n  font-size: 56px;\r\n  line-height: 80px;\r\n  text-align: center;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 600;\r\n  background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  @media (max-width: 320px) {\r\n    margin-top: 5px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  max-width: 100%;\r\n`\r\n\r\n// export class Time extends React.Component {\r\n \r\n//   constructor() {\r\n//     super()\r\n//     const today = new Date(),\r\n//     time = today.getHours() + ':' + today.getMinutes()\r\n\r\n//     this.state = {\r\n//       currentTime : time\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <p>\r\n//           { this.state.currentTime }\r\n//         </p>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\nconst postsInteractive = new Posts()\r\n\r\nexport function App() {\r\n  const [posts, setPosts] = React.useState(postsInteractive.getPosts())\r\n\r\n  /** @param {{name: string, text: string, date: string}} post */\r\n  \r\n  const onSend = (post) => {\r\n    const newPost = {\r\n      key: '',\r\n      name: post.name,\r\n      text: post.text,\r\n      date: date.toLocaleTimeString()\r\n    }\r\n    const allPosts = posts.concat(newPost)\r\n    setPosts(allPosts)\r\n  }\r\n\r\n  const date = new Date(Date.now())\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Main>\r\n        <Title>\r\n          Cozy Space <Img src={asteroid} alt=\"Asteroid\" />\r\n        </Title>\r\n        <PostSendForm onSend={onSend} />\r\n      </Main>\r\n      <PostsList posts={posts} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// когда мы нажмем на кнопку, сначала сработает onButtonClick в PostSendForm, \r\n// а оттуда мы вызваем props.onSend(post) - как раз эту функцию\r\n// заметь, что мы передаем в onSend post, а значит тут можем его принять, это просто параметр функции\r\n\r\n// у нас есть posts (в стейте) стоп покажи еще раз наш стейт...просто вот юз стейт? это весь стейт типа? \r\n// useState мы создали стейт и сохранили его значение в posts (массив)\r\n// А еще есть новый пост (post). Нам надо новый пост сконккетить с текущими (concat)\r\n// А результат объединения сделать новым стейтом (обновить posts через setPosts)\r\n// пока так, можно вниз унести ща"]},"metadata":{},"sourceType":"module"}