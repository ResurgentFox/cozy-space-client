{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\PostsList.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PostItem } from './PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  & > *:not(:first-child) {\n    margin-top: 20px;\n  }\n`; //тут? шо тут импортить\n// подсмотри в PostItem, мы там описали объкт\n// а тип объекта можешь чекнуть вот в App.js если наведешь на posts\n// только поправочка\n// тут надо чтоб был массив, а не один объект\n// немного не то массив объктов это {}[]\n// верни как было, обьясню кое-что {{}} - там было так\n// крч, внешние фигурные скобки тут - относятся к JSDoc\n// а сам тип для параметра props это внутренность \n// в данном случае это один объект с полями key, name...\n// чтобы сказать, что это не один объект, а массив, надо добавить [] после объекта\n// ага.\n// но и это ща не совсем то)\n// ты в начале правильно подумала. То что, есть не удаляй\n// у нас должен быть объект с 1 полем - posts\n// и вот тип этого поля это вот это вот все, что мы написали\n// в одну строчку это конечно некрасиво будет)\n// го я сам перепишу?\n// а то мы ща тут начнем весь тс учить(но мы то будем)00))) да ок я все равно ниче не понимаю...(())\n// ща поймешь, ну это не тс все равно, а тс будем учить потом, да, но типы похоже пишутся\n// я с комментами напишу, следи:\n\n/** \r\n * объявил тип для одного поста:\r\n * @typedef {{key: string, name: string, date: string, text: string}} Post\r\n * объявил, что props - это объект {}, с полем posts, элементы которого ^ Post\r\n * @param {{posts: Post[]}} props //красиво кстати)) го в App.js\r\n**/\n\n_c = List;\nexport function PostsList(props) {\n  // вроде понятно? нуу типа. Ну наведи сейчас здесь на пропс, показывает нужный нам тип же? тип пропс? да я не понимаю где там тип та навожу ща в тг\n  //  ну мышкой наведи на props в PostsList(props), там наверху говорит, что props это объект {posts...}\n  // теперь, нам нужно эти пропсы использовать, как вскод ругеается, что мы не используем.\n  // шаг 1: что будем делать props.posts - это массив\n  // у него есть метод map\n  // метод map, как ты учила, и записывала в тетрадку(ahah) - позволяет преобразовать массив из одного вида в другой..\n  // шаг 2:.. применяя к каждому элементу преобразрвание (которое мы и зададим как колбек)\n  // преобразовывать будем наши объекты в <PostItem>\n  // сейчас можно удалить все, кроме <List> \n  // и внутри начать писать JS, для это открыть там фигурные скобки {}\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: props.posts.map(item => /*#__PURE__*/_jsxDEV(PostItem, {\n      name: item.name,\n      date: item.date,\n      text: item.text\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} //я расшарила сервер у меня не грузит пока\n// у меня тоже, оно собирается вроде\n// походу сломалось всё)00 а мы не делали функцию на кнопку не вешали что б добавлять что-то ФЭЙЛ\n// пока не делали, просто грузим посты из другого места. Это место в теории потом легко будет заменить на запрос эй я потерялся ты где пишешь?)БЛЯТЬ ))) КАКОЙ ТУТ ИМПОРТ?) ПОСТС Я ПРАВИЛЬНО ЗАИМПОРТИЛА? да\n// тут другая ошибка же, ворнинг даже, просто зак\n// колбек это просто функция (обычно стрелочная да), которая принимает параметр\n// пример\n// ['lol', 'kek'].map(item => `Azazaz - ${item}`) // item любое название как у переменной (ну это параметр функции)\n// выдаст массив\n// можно так  красиво) комменты мешают удоли или перенеси, толькомб нужны\n// это автоформаттер в много строк сделает скорее всего и это правильнее я думала регулярки для такого и нужны)00\n// регулярки для еще более сложных замен. Но не только замен, а просто поиска. Потом крч) но можно ведь мне нрав - можно\n// форматни плез что?\n// главное, что поля name, date и тд missing в нашем PostItem\n// это значит, что он хочет, чтоб мы ему эти поля передали пропсами (как обычно), как атрибуты\n// написать пример? da\n// и так далее  к каждому полю?\n// да, можно конечно через синтаксис деструктуризации {...i}, но не будем выпендриваться)) почему)) я только хотела спросить как всё обобщить))\n// было бы так <PostItem {...i}/> но лучше пиши все может это в комментах рядом напишем?  красиво )) :3\n// кстати, key обычно пишут в начале. А можем пока вообше убрать, но когда запустишь, то увидишь, что реакт ругается и просит,\n// да ок\n// ибо иак понятнее будет тебе\n// теперь нужно преобразовать i (смотри на его тип кстати опять) там смотри)) obj Post(а он объект) же должно быть\n// да, он объект, но именно с полями, какие нам нужны для компонента PostItem\n// теперь из этой функции (колбека) мы должны вернуть что-то, а именно <PostItem>\n// используя  поляиз i в качестве пропсов(Как?). Видишь, он хочет пропсы\n// может i переименоваит в item или post или p\n// мне так нрав ты вроде сам говорл что так можно\n// ну ок, прост i обычно называют счетчики всякие в циклах for\n// такок вот негласное правило-привычка прогеров)\n// я обычно пишу it\n\n_c2 = PostsList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostsList.jsx"],"names":["React","styled","PostItem","List","div","PostsList","props","posts","map","item","name","date","text","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;KAnCMD,I;AAoCN,OAAO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE,QAAC,IAAD;AAAA,cACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CACEC,IAAD,iBACE,QAAC,QAAD;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,MAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,MAAA,IAAI,EAAEF,IAAI,CAACG;AAJb,OACOH,IAAI,CAACI,GADZ;AAAA;AAAA;AAAA;AAAA,YAFH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MA1DQR,S","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { PostItem } from './PostItem'\r\n\r\nconst List = styled.div`\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > *:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`\r\n//тут? шо тут импортить\r\n// подсмотри в PostItem, мы там описали объкт\r\n// а тип объекта можешь чекнуть вот в App.js если наведешь на posts\r\n// только поправочка\r\n// тут надо чтоб был массив, а не один объект\r\n// немного не то массив объктов это {}[]\r\n// верни как было, обьясню кое-что {{}} - там было так\r\n// крч, внешние фигурные скобки тут - относятся к JSDoc\r\n// а сам тип для параметра props это внутренность \r\n// в данном случае это один объект с полями key, name...\r\n// чтобы сказать, что это не один объект, а массив, надо добавить [] после объекта\r\n// ага.\r\n// но и это ща не совсем то)\r\n// ты в начале правильно подумала. То что, есть не удаляй\r\n// у нас должен быть объект с 1 полем - posts\r\n// и вот тип этого поля это вот это вот все, что мы написали\r\n// в одну строчку это конечно некрасиво будет)\r\n// го я сам перепишу?\r\n// а то мы ща тут начнем весь тс учить(но мы то будем)00))) да ок я все равно ниче не понимаю...(())\r\n// ща поймешь, ну это не тс все равно, а тс будем учить потом, да, но типы похоже пишутся\r\n// я с комментами напишу, следи:\r\n/** \r\n * объявил тип для одного поста:\r\n * @typedef {{key: string, name: string, date: string, text: string}} Post\r\n * объявил, что props - это объект {}, с полем posts, элементы которого ^ Post\r\n * @param {{posts: Post[]}} props //красиво кстати)) го в App.js\r\n**/\r\nexport function PostsList(props) {\r\n  // вроде понятно? нуу типа. Ну наведи сейчас здесь на пропс, показывает нужный нам тип же? тип пропс? да я не понимаю где там тип та навожу ща в тг\r\n  //  ну мышкой наведи на props в PostsList(props), там наверху говорит, что props это объект {posts...}\r\n  // теперь, нам нужно эти пропсы использовать, как вскод ругеается, что мы не используем.\r\n  // шаг 1: что будем делать props.posts - это массив\r\n  // у него есть метод map\r\n  // метод map, как ты учила, и записывала в тетрадку(ahah) - позволяет преобразовать массив из одного вида в другой..\r\n  // шаг 2:.. применяя к каждому элементу преобразрвание (которое мы и зададим как колбек)\r\n  // преобразовывать будем наши объекты в <PostItem>\r\n  // сейчас можно удалить все, кроме <List> \r\n  // и внутри начать писать JS, для это открыть там фигурные скобки {}\r\n  return (\r\n    <List>\r\n      {props.posts.map(\r\n        (item) => (\r\n          <PostItem\r\n            key={item.key}\r\n            name={item.name}\r\n            date={item.date}\r\n            text={item.text}\r\n          />\r\n        )\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\n//я расшарила сервер у меня не грузит пока\r\n// у меня тоже, оно собирается вроде\r\n// походу сломалось всё)00 а мы не делали функцию на кнопку не вешали что б добавлять что-то ФЭЙЛ\r\n// пока не делали, просто грузим посты из другого места. Это место в теории потом легко будет заменить на запрос эй я потерялся ты где пишешь?)БЛЯТЬ ))) КАКОЙ ТУТ ИМПОРТ?) ПОСТС Я ПРАВИЛЬНО ЗАИМПОРТИЛА? да\r\n// тут другая ошибка же, ворнинг даже, просто зак\r\n// колбек это просто функция (обычно стрелочная да), которая принимает параметр\r\n// пример\r\n// ['lol', 'kek'].map(item => `Azazaz - ${item}`) // item любое название как у переменной (ну это параметр функции)\r\n// выдаст массив\r\n\r\n// можно так  красиво) комменты мешают удоли или перенеси, толькомб нужны\r\n        // это автоформаттер в много строк сделает скорее всего и это правильнее я думала регулярки для такого и нужны)00\r\n        // регулярки для еще более сложных замен. Но не только замен, а просто поиска. Потом крч) но можно ведь мне нрав - можно\r\n        // форматни плез что?\r\n        // главное, что поля name, date и тд missing в нашем PostItem\r\n        // это значит, что он хочет, чтоб мы ему эти поля передали пропсами (как обычно), как атрибуты\r\n        // написать пример? da\r\n        // и так далее  к каждому полю?\r\n        // да, можно конечно через синтаксис деструктуризации {...i}, но не будем выпендриваться)) почему)) я только хотела спросить как всё обобщить))\r\n        // было бы так <PostItem {...i}/> но лучше пиши все может это в комментах рядом напишем?  красиво )) :3\r\n        // кстати, key обычно пишут в начале. А можем пока вообше убрать, но когда запустишь, то увидишь, что реакт ругается и просит,\r\n        // да ок\r\n        // ибо иак понятнее будет тебе\r\n        // теперь нужно преобразовать i (смотри на его тип кстати опять) там смотри)) obj Post(а он объект) же должно быть\r\n        // да, он объект, но именно с полями, какие нам нужны для компонента PostItem\r\n        // теперь из этой функции (колбека) мы должны вернуть что-то, а именно <PostItem>\r\n        // используя  поляиз i в качестве пропсов(Как?). Видишь, он хочет пропсы\r\n        // может i переименоваит в item или post или p\r\n        // мне так нрав ты вроде сам говорл что так можно\r\n        // ну ок, прост i обычно называют счетчики всякие в циклах for\r\n        // такок вот негласное правило-привычка прогеров)\r\n        // я обычно пишу it"]},"metadata":{},"sourceType":"module"}