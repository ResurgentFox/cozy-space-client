{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\PostsList.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PostItem } from './PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = styled.div`\n  max-width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  & > *:not(:first-child) {\n    margin-top: 20px;\n  }\n`; // можно и так если шо, но если хочешь имено конст, то ок\n// тут у нас тоже какие-то пропсы будут же\n\n_c = List;\nexport function PostsList() {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(PostItem, {\n      name: \"ResurgentFox\",\n      date: \"14:33\",\n      text: \"Hey bros!\"\n    }, '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      name: \"MisterCat\",\n      date: \"13:33\",\n      text: \"Murmur!\"\n    }, '2', false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      name: \"FuckYourMom\",\n      date: \"12:15\",\n      text: \"Ya daun! \\u0449\\u0430\\u0441 \\u043D\\u0430\\u0434\\u043E \\u043F\\u043E\\u0434\\u0443\\u043C\\u0430\\u0442\\u044C \\u042D\\u0442\\u043E \\u0442\\u0430\\u043A \\u0441\\u0442\\u0440\\u043E\\u043A\\u0430\"\n    }, '3', false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      name: \"Ueban\",\n      date: \"11:33\",\n      text: \"Sosite\"\n    }, '4', false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      name: \"loveLinux\",\n      date: \"11:15\",\n      text: \"Windows huinya\"\n    }, '5', false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} // в чем отличие? будет это и так и атк функция?\n// да, просто нам ща типизировать через JSDoc функцию будет проще, как я понял\n// конструкцию со строелочной функцией сложнее описать в JSDoc (больше писать надо прост)\n// покушой, я почилю, чаек попью)\n//о ну ок)\n\n_c2 = PostsList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostsList.jsx"],"names":["React","styled","PostItem","List","div","PostsList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,YAAvB;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CASA;AACA;;KAVMD,I;AAWN,OAAO,SAASE,SAAT,GAAqB;AAC1B,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAC,cAAzB;AAAwC,MAAA,IAAI,EAAC,OAA7C;AAAqD,MAAA,IAAI,EAAC;AAA1D,OAAe,GAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,IAAI,EAAC;AAAvD,OAAe,GAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAC,aAAzB;AAAuC,MAAA,IAAI,EAAC,OAA5C;AAAoD,MAAA,IAAI,EAAC;AAAzD,OAAe,GAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,IAAI,EAAC,OAAtC;AAA8C,MAAA,IAAI,EAAC;AAAnD,OAAe,GAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,IAAI,EAAC;AAAvD,OAAe,GAAf;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,C,CACD;AACA;AACA;AACA;AACA;;MApBgBA,S","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {PostItem} from './PostItem'\r\n\r\nconst List = styled.div`\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > *:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`\r\n// можно и так если шо, но если хочешь имено конст, то ок\r\n// тут у нас тоже какие-то пропсы будут же\r\nexport function PostsList() {\r\n  return (\r\n    <List>\r\n      <PostItem key={'1'} name='ResurgentFox' date='14:33' text='Hey bros!' />\r\n      <PostItem key={'2'} name='MisterCat' date='13:33' text='Murmur!' />\r\n      <PostItem key={'3'} name='FuckYourMom' date='12:15' text='Ya daun! щас надо подумать Это так строка' />\r\n      <PostItem key={'4'} name='Ueban' date='11:33' text='Sosite' />\r\n      <PostItem key={'5'} name='loveLinux' date='11:15' text='Windows huinya' />\r\n      {/* тут ща можно добавить еще несколько PostItem'ов и запустить - тестить верстку */}\r\n      {/* только нужно будет еще атрибут key={} прописать для каждого PostItem //это зачем я не помню */} \r\n      {/* реакт устроен так, что когда видит несколько одинаковых типов элементов внутри одного элемента, */}\r\n      {/* то он не может их нормально различать (одинаковые же снаружи) и криво может их обновить */}\r\n      {/* пока нам неоткуда брать это значение, будем просто '1','2','3' писать */}\r\n    </List>\r\n  )\r\n} \r\n// в чем отличие? будет это и так и атк функция?\r\n// да, просто нам ща типизировать через JSDoc функцию будет проще, как я понял\r\n// конструкцию со строелочной функцией сложнее описать в JSDoc (больше писать надо прост)\r\n// покушой, я почилю, чаек попью)\r\n//о ну ок)"]},"metadata":{},"sourceType":"module"}