{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/programming/network.v1/cozy-space-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import*as React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Form=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  top: 0;\\n  position: sticky;\\n  margin: 0 auto;\\n  margin-bottom: 5%;\\n  padding-top: 5%;\\n  @media (max-width: 320px) {\\n    padding-top: 5px;\\n  }\\n\\n  max-width: 400px;\\n  display: flex;\\n  flex-direction: column;\\n\"])));const Input=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding: 10px;\\n  background-color: #746087;\\n  border: 1px solid #1e1d1f;\\n  border-radius: 10px;\\n  outline: none;\\n  font-family: 'Tourney', cursive;\\n  font-weight: 800;\\n\"])));const Textarea=styled.textarea(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  resize: none;\\n  min-height: 100px;\\n  padding: 10px;\\n  border-radius: 15px;\\n  outline: none;\\n  border: 1px solid #1e1d1f;\\n  background-color: #746087;\\n  font-family: 'Tourney', cursive;\\n  font-weight: 800;\\n\"])));const Button=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-top: 7%;\\n  max-width: 120px;\\n  max-height: 40px;\\n  outline: none;\\n  border-radius: 30px;\\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\\n  border: transparent;\\n  color: #000;\\n  font-size: 28px;\\n  font-family: 'Bungee Shade', cursive;\\n  font-weight: 900;\\n  cursor: pointer;\\n  letter-spacing: 1px;\\n  text-transform: uppercase;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition-duration: 0.5s;\\n  top: 0;\\n  position: relative;\\n  &:hover {\\n    top: 5px;\\n  }\\n\"])));const Label=styled.label(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 25px;\\n  margin-bottom: 8px;\\n  color: #746087;\\n  font-size: 20px;\\n  font-family: 'Tourney', cursive;\\n\"])));const ErrorText=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-family: 'Tourney', cursive;\\n  margin-top: 3rem;\\n  margin-bottom: 5%;\\n  padding: 8px;\\n  color: #4ef2e7;\\n  text-align: center; \\n  font-size: 20px;     \\n  font-weight: 600;\\n  border: 2px solid  #4ef2e7;\\n  border-radius: 15px; \\n  max-width: 400px;\\n  max-height: 100px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));const ErrorTextSmall=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: #4ef2e7;\\n  font-size: 14px; \\n  min-height: 14px;\\n  margin-bottom: 2px;\\n\"])));export function PostSendForm(props){const[name,setName]=React.useState('');const[text,setText]=React.useState('');const[validName,setValidName]=React.useState(true);const[validText,setValidText]=React.useState(true);const[hasError,setHasError]=React.useState(false);const onButtonClick=()=>{const post={name,text};if(name.trim()&&text.trim()){props.onSend(post);setHasError(false);}else{setHasError(true);}setText('');};const onKeyEnter=e=>{if(e.key==='Enter'){onButtonClick();e.preventDefault();}};const onNameBlur=()=>{setValidName(!!name);};const onTextBlur=()=>{setValidText(!!text);};return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Label,{children:\"Your name\"}),/*#__PURE__*/_jsx(ErrorTextSmall,{children:!validName?'Please enter the name!':''}),/*#__PURE__*/_jsx(Input,{value:name,onChange:e=>setName(e.target.value),onBlur:onNameBlur}),/*#__PURE__*/_jsx(Label,{children:\"Share what`s in your mind\"}),/*#__PURE__*/_jsx(ErrorTextSmall,{children:!validText?'You can`t send empty messages :c':''}),/*#__PURE__*/_jsx(Textarea,{value:text,onKeyPress:onKeyEnter,onChange:e=>setText(e.target.value),onBlur:onTextBlur}),/*#__PURE__*/_jsx(Button,{onClick:onButtonClick,children:\"go!\"}),hasError&&/*#__PURE__*/_jsx(ErrorText,{children:\"! You need to fill name and text areas !\"})]});}","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","Form","div","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","Textarea","textarea","_templateObject3","Button","button","_templateObject4","Label","label","_templateObject5","ErrorText","_templateObject6","ErrorTextSmall","_templateObject7","PostSendForm","props","name","setName","useState","text","setText","validName","setValidName","validText","setValidText","hasError","setHasError","onButtonClick","post","trim","onSend","onKeyEnter","e","key","preventDefault","onNameBlur","onTextBlur","children","value","onChange","target","onBlur","onKeyPress","onClick"],"sources":["D:/programming/network.v1/cozy-space-client/src/PostSendForm.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from './types'\r\n\r\nconst Form = styled.div`\r\n  top: 0;\r\n  position: sticky;\r\n  margin: 0 auto;\r\n  margin-bottom: 5%;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  resize: none;\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\n\r\nconst ErrorText = styled.div`\r\n  font-family: 'Tourney', cursive;\r\n  margin-top: 3rem;\r\n  margin-bottom: 5%;\r\n  padding: 8px;\r\n  color: #4ef2e7;\r\n  text-align: center; \r\n  font-size: 20px;     \r\n  font-weight: 600;\r\n  border: 2px solid  #4ef2e7;\r\n  border-radius: 15px; \r\n  max-width: 400px;\r\n  max-height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ErrorTextSmall = styled.div`\r\n  color: #4ef2e7;\r\n  font-size: 14px; \r\n  min-height: 14px;\r\n  margin-bottom: 2px;\r\n`\r\n\r\ninterface Props {\r\n  onSend: (post: Post) => void\r\n}\r\n\r\nexport function PostSendForm(props: Props) {\r\n  const [name, setName] = React.useState('')\r\n  const [text, setText] = React.useState('')\r\n\r\n  const [validName, setValidName] = React.useState(true)\r\n  const [validText, setValidText] = React.useState(true)\r\n  const [hasError, setHasError] = React.useState(false);\r\n\r\n  const onButtonClick = () => {\r\n    const post: Post = {\r\n      name,\r\n      text,\r\n    }\r\n    \r\n    if (name.trim() && text.trim()){\r\n      props.onSend(post) \r\n      setHasError(false)\r\n    } else {\r\n      setHasError(true)\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  const onKeyEnter = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onButtonClick()\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  const onNameBlur = () => { \r\n    setValidName(!!name)\r\n  }\r\n\r\n  const onTextBlur = () => {\r\n    setValidText(!!text)\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Label>Your name</Label>\r\n      <ErrorTextSmall>{!validName ? 'Please enter the name!' : ''}</ErrorTextSmall>\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)} \r\n        onBlur={onNameBlur}\r\n      />\r\n      <Label>Share what`s in your mind</Label>\r\n      <ErrorTextSmall>{!validText ? 'You can`t send empty messages :c' : ''}</ErrorTextSmall>\r\n      <Textarea\r\n        value={text}\r\n        onKeyPress={onKeyEnter}\r\n        onChange={(e) => setText(e.target.value)}     \r\n        onBlur={onTextBlur}\r\n      />\r\n      <Button onClick={onButtonClick}>go!</Button>\r\n      {hasError && <ErrorText>! You need to fill name and text areas !</ErrorText>}\r\n    </Form>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}