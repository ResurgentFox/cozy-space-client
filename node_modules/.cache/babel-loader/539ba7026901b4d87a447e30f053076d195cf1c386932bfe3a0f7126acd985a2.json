{"ast":null,"code":"import{setWsHeartbeat}from'ws-heartbeat/client';const serverAddress=process.env.REACT_APP_URL||'127.0.0.1:3001';export class Posts{constructor(){this.ws=void 0;this.handleNewPost=void 0;this.ws=new WebSocket(\"wss://\".concat(serverAddress));setWsHeartbeat(this.ws,'{\"kind\":\"ping\"}',{pingTimeout:60000,pingInterval:25000});this.ws.onmessage=event=>{const{data}=event;const parsed=JSON.parse(data);if(parsed.name&&parsed.text){var _this$handleNewPost;(_this$handleNewPost=this.handleNewPost)===null||_this$handleNewPost===void 0?void 0:_this$handleNewPost.call(this,parsed);}};}onNewPost(callback){this.handleNewPost=callback;}getPosts(){return fetch(\"https://\".concat(serverAddress,\"/get_posts\"));}sendPost(post){return fetch(\"https://\".concat(serverAddress,\"/send_post?name=\").concat(post.name,\"&text=\").concat(post.text));}}","map":{"version":3,"names":["setWsHeartbeat","serverAddress","process","env","REACT_APP_URL","Posts","constructor","ws","handleNewPost","WebSocket","concat","pingTimeout","pingInterval","onmessage","event","data","parsed","JSON","parse","name","text","_this$handleNewPost","call","onNewPost","callback","getPosts","fetch","sendPost","post"],"sources":["D:/programming/network.v1/cozy-space-client/src/Data.ts"],"sourcesContent":["import { FullPost, Post } from './types'\r\nimport { setWsHeartbeat } from 'ws-heartbeat/client'\r\n\r\nconst serverAddress = process.env.REACT_APP_URL || '127.0.0.1:3001'\r\n\r\nexport class Posts {\r\n  private ws: WebSocket\r\n  private handleNewPost?: (post: FullPost) => void \r\n  \r\n  constructor() {\r\n    this.ws = new WebSocket(`wss://${serverAddress}`)\r\n    setWsHeartbeat(this.ws, '{\"kind\":\"ping\"}', {\r\n      pingTimeout: 60000,\r\n      pingInterval: 25000, \r\n    })\r\n    this.ws.onmessage = event => { \r\n      const { data } = event\r\n      const parsed = JSON.parse(data)\r\n      if (parsed.name && parsed.text) {\r\n        this.handleNewPost?.(parsed)\r\n      } \r\n    }\r\n  }\r\n\r\n  onNewPost(callback: (post: FullPost) => void) {\r\n    this.handleNewPost = callback\r\n  }\r\n\r\n  getPosts() {\r\n    return fetch(`https://${serverAddress}/get_posts`)\r\n  }\r\n  sendPost(post: Post) {\r\n    return fetch(`https://${serverAddress}/send_post?name=${post.name}&text=${post.text}`)\r\n  }\r\n}\r\n"],"mappings":"AACA,OAASA,cAAc,KAAQ,qBAAqB,CAEpD,KAAM,CAAAC,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,EAAI,gBAAgB,CAEnE,MAAO,MAAM,CAAAC,KAAM,CAIjBC,WAAWA,CAAA,CAAG,MAHNC,EAAE,aACFC,aAAa,QAGnB,IAAI,CAACD,EAAE,CAAG,GAAI,CAAAE,SAAS,UAAAC,MAAA,CAAUT,aAAa,CAAE,CAAC,CACjDD,cAAc,CAAC,IAAI,CAACO,EAAE,CAAE,iBAAiB,CAAE,CACzCI,WAAW,CAAE,KAAK,CAClBC,YAAY,CAAE,KAChB,CAAC,CAAC,CACF,IAAI,CAACL,EAAE,CAACM,SAAS,CAAGC,KAAK,EAAI,CAC3B,KAAM,CAAEC,IAAK,CAAC,CAAGD,KAAK,CACtB,KAAM,CAAAE,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAC/B,GAAIC,MAAM,CAACG,IAAI,EAAIH,MAAM,CAACI,IAAI,CAAE,KAAAC,mBAAA,CAC9B,CAAAA,mBAAA,KAAI,CAACb,aAAa,UAAAa,mBAAA,iBAAlBA,mBAAA,CAAAC,IAAA,KAAI,CAAiBN,MAAM,CAAC,CAC9B,CACF,CAAC,CACH,CAEAO,SAASA,CAACC,QAAkC,CAAE,CAC5C,IAAI,CAAChB,aAAa,CAAGgB,QAAQ,CAC/B,CAEAC,QAAQA,CAAA,CAAG,CACT,MAAO,CAAAC,KAAK,YAAAhB,MAAA,CAAYT,aAAa,cAAY,CAAC,CACpD,CACA0B,QAAQA,CAACC,IAAU,CAAE,CACnB,MAAO,CAAAF,KAAK,YAAAhB,MAAA,CAAYT,aAAa,qBAAAS,MAAA,CAAmBkB,IAAI,CAACT,IAAI,WAAAT,MAAA,CAASkB,IAAI,CAACR,IAAI,CAAE,CAAC,CACxF,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}