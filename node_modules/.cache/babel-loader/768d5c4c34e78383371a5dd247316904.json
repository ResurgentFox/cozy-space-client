{"ast":null,"code":"export class Posts {\n  getPosts() {\n    return [{\n      key: '1',\n      name: 'ResurgentFox',\n      date: '14:33',\n      text: 'Nice to meet you guys!'\n    }, {\n      key: '2',\n      name: 'Winston_Wolf',\n      date: '12:15',\n      text: 'So you guys are fans of Tarantino`s movies?'\n    }, {\n      key: '3',\n      name: 'Butch',\n      date: '13:33',\n      text: 'Here`s a really nice place!'\n    }, {\n      key: '4',\n      name: 'Mr.Pink',\n      date: '11:33',\n      text: 'Add me guys, I`m new here'\n    }, {\n      key: '5',\n      name: 'Vincent',\n      date: '11:15',\n      text: 'How can I upoad my photos?'\n    }];\n  }\n\n  addPosts() {// тут пока ничего не будет, добавление скорее всего сегодня уже не сделаем я ъочу((( ибо завтра могу быть занята (уборкой а потом устану)\n    // тогда ускоримся) но пока тут пусто будетпусть\n    // шо делаем?\n    // го создадим экзкемпляр этого класса в App.js, в глобальном скопе - снаружи всего\n  }\n\n} // шо тут происходит? я прост пробую, что по промисам) ты тут? ну щас чай хочу нагреть пойти остыл)\n// КОГДА ВЕРНЕШЬСЯ, НАПИШИ В ТГ, ИБО ТУТ Я МОГУ НЕ УВИДЕТЬ ХАРАШО УРА))) <3<#<#<#3 меньше чем решётка\n// будем считать, что ето железное сердечко)\n// оки\n// оки да, оно будет отдавать посты например в наш компонент, который их рисует - в PostList (это потом)\n// то есть где-то наверху, в App.js например. Мы создадим const posts = new Posts()\n// и в PostList (добавим пропс posts) передадим posts={posts.getPosts()} - и они туда попадут\n//оно принимает в себе посты, а кто их отправляет и куда?\n// эм я кстати так и не прошла стейт. я на нем тогда и стопнулась в проекте\n// то есть стейт это и хранилище и хук?\n// стейт это хранилище переменных (данных), а хук - это функция, в данном случае useState\n// ты тут? монго? да\n// да, я думаю)\n// просто у нас вместо Data потом будут запросы на сервер скорее всего, нам хранить посты там не нужно будет\n// в общем так:\n// оставь там пока только два метода, а поле убери\n// метод getPosts будет возрващать фейковые данные пока - то, что у нас сейчас в PostList рисуется,\n// нужно их в виде массива объектов ща сделать. Пример:\n// [\n//     {\n//         key: '1'\n//         name: 'ResurgentFox'\n//         date: '14:33'\n//         text: 'Nice to meet you guys!'\n//     },\n// ]\n// вот getPosts будет этот массив возвращать\n//то есть нужно перетащить всё сюда? да, но только не компоненты, а данные. к компоненте там стили применены\n// стили тут не затронутся, просто даные оттуда вытащим.\n// А PostList эти данные будет рисовать как PostItem ипользуя наш любимый posts.map -- будем превращать данные в компоненту в мапе\n// а компонента будет потом","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/Data.js"],"names":["Posts","getPosts","key","name","date","text","addPosts"],"mappings":"AAAA,OAAO,MAAMA,KAAN,CAAY;AACjBC,EAAAA,QAAQ,GAAG;AACT,WAAO,CACL;AACEC,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KADK,EAOL;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAPK,EAaL;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAbK,EAmBL;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAnBK,EAyBL;AACEH,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAzBK,CAAP;AAgCD;;AACDC,EAAAA,QAAQ,GAAG,CACT;AACA;AACA;AACA;AACD;;AAxCgB,C,CA2CnB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["export class Posts {\r\n  getPosts() {\r\n    return [\r\n      {\r\n        key: '1',\r\n        name: 'ResurgentFox',\r\n        date: '14:33',\r\n        text: 'Nice to meet you guys!',\r\n      },\r\n      {\r\n        key: '2',\r\n        name: 'Winston_Wolf',\r\n        date: '12:15',\r\n        text: 'So you guys are fans of Tarantino`s movies?',\r\n      },\r\n      {\r\n        key: '3',\r\n        name: 'Butch',\r\n        date: '13:33',\r\n        text: 'Here`s a really nice place!',\r\n      },\r\n      {\r\n        key: '4',\r\n        name: 'Mr.Pink',\r\n        date: '11:33',\r\n        text: 'Add me guys, I`m new here',\r\n      },\r\n      {\r\n        key: '5',\r\n        name: 'Vincent',\r\n        date: '11:15',\r\n        text: 'How can I upoad my photos?',\r\n      },\r\n    ]\r\n  }\r\n  addPosts() {\r\n    // тут пока ничего не будет, добавление скорее всего сегодня уже не сделаем я ъочу((( ибо завтра могу быть занята (уборкой а потом устану)\r\n    // тогда ускоримся) но пока тут пусто будетпусть\r\n    // шо делаем?\r\n    // го создадим экзкемпляр этого класса в App.js, в глобальном скопе - снаружи всего\r\n  }\r\n}\r\n\r\n// шо тут происходит? я прост пробую, что по промисам) ты тут? ну щас чай хочу нагреть пойти остыл)\r\n// КОГДА ВЕРНЕШЬСЯ, НАПИШИ В ТГ, ИБО ТУТ Я МОГУ НЕ УВИДЕТЬ ХАРАШО УРА))) <3<#<#<#3 меньше чем решётка\r\n// будем считать, что ето железное сердечко)\r\n\r\n// оки\r\n// оки да, оно будет отдавать посты например в наш компонент, который их рисует - в PostList (это потом)\r\n// то есть где-то наверху, в App.js например. Мы создадим const posts = new Posts()\r\n// и в PostList (добавим пропс posts) передадим posts={posts.getPosts()} - и они туда попадут\r\n\r\n//оно принимает в себе посты, а кто их отправляет и куда?\r\n// эм я кстати так и не прошла стейт. я на нем тогда и стопнулась в проекте\r\n// то есть стейт это и хранилище и хук?\r\n// стейт это хранилище переменных (данных), а хук - это функция, в данном случае useState\r\n// ты тут? монго? да\r\n// да, я думаю)\r\n// просто у нас вместо Data потом будут запросы на сервер скорее всего, нам хранить посты там не нужно будет\r\n// в общем так:\r\n// оставь там пока только два метода, а поле убери\r\n// метод getPosts будет возрващать фейковые данные пока - то, что у нас сейчас в PostList рисуется,\r\n// нужно их в виде массива объектов ща сделать. Пример:\r\n// [\r\n//     {\r\n//         key: '1'\r\n//         name: 'ResurgentFox'\r\n//         date: '14:33'\r\n//         text: 'Nice to meet you guys!'\r\n//     },\r\n// ]\r\n\r\n// вот getPosts будет этот массив возвращать\r\n//то есть нужно перетащить всё сюда? да, но только не компоненты, а данные. к компоненте там стили применены\r\n// стили тут не затронутся, просто даные оттуда вытащим.\r\n// А PostList эти данные будет рисовать как PostItem ипользуя наш любимый posts.map -- будем превращать данные в компоненту в мапе\r\n// а компонента будет потом\r\n"]},"metadata":{},"sourceType":"module"}