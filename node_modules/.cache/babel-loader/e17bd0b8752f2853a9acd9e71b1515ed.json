{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\PostSendForm.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.div`\n  top: 0;\n  position: sticky;\n  margin: 0 auto;\n  margin-bottom: 5%;\n  padding-top: 5%;\n  @media (max-width: 320px) {\n    padding-top: 5px;\n  }\n\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Form;\nconst Input = styled.input`\n  padding: 10px;\n  background-color: #746087;\n  /* border: 1px solid ${props => props.error ? '#bf0404' : '#1e1d1f'}; */\n  border: 1px solid #1e1d1f;\n  border-radius: 10px;\n  outline: none;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c2 = Input;\nconst Textarea = styled.textarea`\n  min-height: 100px;\n  padding: 10px;\n  border-radius: 15px;\n  outline: none;\n  /* border: 1px solid ${props => props.error ? '#bf0404' : '#1e1d1f'}; */\n  border: 1px solid #1e1d1f;\n  background-color: #746087;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c3 = Textarea;\nconst Button = styled.button`\n  margin-top: 7%;\n  max-width: 120px;\n  max-height: 40px;\n  outline: none;\n  border-radius: 30px;\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\n  border: transparent;\n  color: #000;\n  font-size: 28px;\n  font-family: 'Bungee Shade', cursive;\n  font-weight: 900;\n  cursor: pointer;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition-duration: 0.5s;\n  top: 0;\n  position: relative;\n  &:hover {\n    top: 5px;\n  }\n`;\n_c4 = Button;\nconst Label = styled.label`\n  margin-top: 25px;\n  margin-bottom: 8px;\n  color: #746087;\n  font-size: 20px;\n  font-family: 'Tourney', cursive;\n`;\n_c5 = Label;\nconst ErrorText = styled.div`\n  /* font-family: 'Tourney', cursive; */\n  margin-top: 3rem;\n  margin-bottom: 5%;\n  padding: 8px;\n  color: #4ef2e7;\n  text-shadow: 1px 1px 1px #4ef2e7;\n  text-align: center; \n  font-size: 20px;     \n  font-weight: 600;\n  border: 1px double #4ef2e7;\n  border-radius: 15px; \n  box-shadow: 0px 0px 2px 2px #4ef2e7;\n  max-width: 400px;\n  max-height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c6 = ErrorText;\nconst ErrorTextSmall = styled.div`\n  color: #4ef2e7;\n  font-size: 14px; \n  min-height: 14px;\n  margin-bottom: 2px;\n`;\n_c7 = ErrorTextSmall;\nexport function PostSendForm(props) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [validName, setValidName] = React.useState(true);\n  const [validText, setValidText] = React.useState(true);\n  const [hasError, setHasError] = React.useState(false);\n\n  const onButtonClick = () => {\n    const post = {\n      name,\n      text\n    };\n\n    if (name.trim() && text.trim()) {\n      props.onSend(post);\n      setHasError(false); // если отправил норм имя+текст, то ошибку скрываем\n    } else {\n      setHasError(true); // ошибка что юзер дурак (само отображение в верстке внизу)\n    }\n\n    setText('');\n  };\n\n  const onKeyEnter = e => {\n    if (e.key === 'Enter') {\n      onButtonClick();\n      e.preventDefault();\n    }\n  };\n\n  const onNameBlur = () => {\n    setValidName(!!name);\n  };\n\n  const onTextBlur = () => {\n    setValidText(!!text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorTextSmall, {\n      children: !validName ? 'Please enter the name!' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: name,\n      onChange: e => setName(e.target.value),\n      error: !validName,\n      onBlur: onNameBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Share what`s in your mind\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorTextSmall, {\n      children: !validText ? 'You can`t send empty messages :c' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      value: text,\n      onKeyPress: onKeyEnter,\n      onChange: e => setText(e.target.value),\n      error: !validText,\n      onBlur: onTextBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onButtonClick,\n      children: \"go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: \"! You need to fill name and text areas !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n} //#ff2b2b первый варик \n//#bf0404 Более тёмный варик\n\n_s(PostSendForm, \"c+pFxQmWgtFNeWqjKCWPw5501Vk=\");\n\n_c8 = PostSendForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Textarea\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"ErrorText\");\n$RefreshReg$(_c7, \"ErrorTextSmall\");\n$RefreshReg$(_c8, \"PostSendForm\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostSendForm.tsx"],"names":["React","styled","Form","div","Input","input","props","error","Textarea","textarea","Button","button","Label","label","ErrorText","ErrorTextSmall","PostSendForm","name","setName","useState","text","setText","validName","setValidName","validText","setValidText","hasError","setHasError","onButtonClick","post","trim","onSend","onKeyEnter","e","key","preventDefault","onNameBlur","onTextBlur","target","value"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from './types'\r\n\r\nconst Form = styled.div`\r\n  top: 0;\r\n  position: sticky;\r\n  margin: 0 auto;\r\n  margin-bottom: 5%;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\ninterface ValidProps {\r\n  error: boolean;\r\n}\r\n\r\nconst Input = styled.input<ValidProps>`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  /* border: 1px solid ${props => props.error ? '#bf0404' : '#1e1d1f'}; */\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea<ValidProps>`\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  /* border: 1px solid ${props => props.error ? '#bf0404' : '#1e1d1f'}; */\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\n\r\nconst ErrorText = styled.div`\r\n  /* font-family: 'Tourney', cursive; */\r\n  margin-top: 3rem;\r\n  margin-bottom: 5%;\r\n  padding: 8px;\r\n  color: #4ef2e7;\r\n  text-shadow: 1px 1px 1px #4ef2e7;\r\n  text-align: center; \r\n  font-size: 20px;     \r\n  font-weight: 600;\r\n  border: 1px double #4ef2e7;\r\n  border-radius: 15px; \r\n  box-shadow: 0px 0px 2px 2px #4ef2e7;\r\n  max-width: 400px;\r\n  max-height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ErrorTextSmall = styled.div`\r\n  color: #4ef2e7;\r\n  font-size: 14px; \r\n  min-height: 14px;\r\n  margin-bottom: 2px;\r\n`\r\n\r\ninterface Props {\r\n  onSend: (post: Post) => void\r\n}\r\n\r\nexport function PostSendForm(props: Props) {\r\n  const [name, setName] = React.useState('')\r\n  const [text, setText] = React.useState('')\r\n\r\n  const [validName, setValidName] = React.useState(true)\r\n  const [validText, setValidText] = React.useState(true)\r\n  const [hasError, setHasError] = React.useState(false);\r\n\r\n  const onButtonClick = () => {\r\n    const post: Post = {\r\n      name,\r\n      text,\r\n    }\r\n    \r\n    if (name.trim() && text.trim()){\r\n      props.onSend(post) \r\n      setHasError(false) // если отправил норм имя+текст, то ошибку скрываем\r\n    } else {\r\n      setHasError(true) // ошибка что юзер дурак (само отображение в верстке внизу)\r\n    }\r\n    setText('')\r\n  }\r\n\r\n  const onKeyEnter = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onButtonClick()\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  const onNameBlur = () => { \r\n    setValidName(!!name)\r\n  }\r\n\r\n  const onTextBlur = () => {\r\n    setValidText(!!text)\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Label>Your name</Label>\r\n      {/* 1) для этих маленьких ошибок сделать еще одну компоненту для отображения ошибки */}\r\n      {/* 1.1) я бы назвал ErrorText, а ту большую переименовал в ErrorBox */}\r\n      {/* 2) и тут уже как изначально предлагал: */}\r\n      {/* <ErrorText>{валидно ли name ? 'Please enter the name!' : ''}</ErrorText> */}\r\n      <ErrorTextSmall>{!validName ? 'Please enter the name!' : ''}</ErrorTextSmall>\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)} \r\n        error={!validName} \r\n        onBlur={onNameBlur}\r\n      />\r\n      <Label>Share what`s in your mind</Label>\r\n      <ErrorTextSmall>{!validText ? 'You can`t send empty messages :c' : ''}</ErrorTextSmall>\r\n      <Textarea\r\n        value={text}\r\n        onKeyPress={onKeyEnter}\r\n        onChange={(e) => setText(e.target.value)} \r\n        error={!validText}\r\n        onBlur={onTextBlur}\r\n      />\r\n      <Button onClick={onButtonClick}>go!</Button>\r\n      {/* Тут 2 пункта:\r\n        1) Нужно вместо тернарника сделать синтаксис такой: {hasError && <ErrorText>You need to fill name and text areas :c</ErrorText>}\r\n        2) Добавить этот самый стейт hasError:\r\n        2.1) объявить его выше через useState так же\r\n        2.2) в событии отправки (в else блоке где TODO) делать setHasError в true\r\n        2.3) в событии отправки (если name и text есть) делать setHasError false\r\n      */}\r\n      {hasError && <ErrorText>! You need to fill name and text areas !</ErrorText>}\r\n    </Form>\r\n  )\r\n}\r\n\r\n\r\n//#ff2b2b первый варик \r\n//#bf0404 Более тёмный варик"]},"metadata":{},"sourceType":"module"}