{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport asteroid from \"./assets/asteroid.svg\";\nimport { PostsList } from './PostsList';\nimport { Posts } from './Data';\nimport { PostSendForm } from './PostSendForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.section`\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 0 20px 15px;\n`;\n_c = Wrapper;\nconst Main = styled.section`\n  height: 100vh;\n`;\n_c2 = Main;\nconst Title = styled.h1`\n  font-size: 56px;\n  line-height: 80px;\n  text-align: center;\n  font-family: 'Tourney', cursive;\n  font-weight: 600;\n  background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  @media (max-width: 320px) {\n    margin-top: 5px;\n    margin-bottom: 0;\n  }\n`;\n_c3 = Title;\nconst Img = styled.img`\n  width: 60px;\n  height: 60px;\n  max-width: 100%;\n`;\n_c4 = Img;\nconst postsInteractive = new Posts();\nexport function App() {\n  _s();\n\n  const [posts, setPosts] = React.useState([]);\n\n  const onSend = post => {\n    postsInteractive.sendPost(post);\n    fetchPosts(); //прост  так?\n    // почти, можешь ща чекнуть, что будет\n    // и потом подумаем, почему так. Мы упустили одну маленькую деталь, но важную\n    // вот тут надо обновить список постов:\n    // получить их с сервера    -\\___эти два действия мы уже делаем.., где?\n    // поместить в стейт posts  -/\n    // а значит тут достаточно что сделать? эм подскажи? \n    // раз мы уже умеем это делать, то можно переиспользовать функцию fetchPosts(), \n    // просто вызвав ее после отправки постов\n    // та в смысле просто вызвать \n  };\n\n  const fetchPosts = async () => {\n    const newPosts = await postsInteractive.getPosts();\n    setPosts(await newPosts.json());\n  };\n\n  React.useEffect(() => {\n    fetchPosts(); // как тут\n\n    console.log('Fetch is working');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"Cozy Space \", /*#__PURE__*/_jsxDEV(Img, {\n          src: asteroid,\n          alt: \"Asteroid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostSendForm, {\n        onSend: onSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsList, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Img\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/App.tsx"],"names":["React","styled","PostsList","Posts","PostSendForm","Wrapper","section","Main","Title","h1","Img","img","postsInteractive","App","posts","setPosts","useState","onSend","post","sendPost","fetchPosts","newPosts","getPosts","json","useEffect","console","log","asteroid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAKA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,OAAQ;AAC/B;AACA;AACA;AACA,CAJA;KAAMD,O;AAKN,MAAME,IAAI,GAAGN,MAAM,CAACK,OAAQ;AAC5B;AACA,CAFA;MAAMC,I;AAGN,MAAMC,KAAK,GAAGP,MAAM,CAACQ,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMD,K;AAgBN,MAAME,GAAG,GAAGT,MAAM,CAACU,GAAI;AACvB;AACA;AACA;AACA,CAJA;MAAMD,G;AAMN,MAAME,gBAAgB,GAAG,IAAIT,KAAJ,EAAzB;AAEA,OAAO,SAASU,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACgB,QAAN,CAA2B,EAA3B,CAA1B;;AAEA,QAAMC,MAAM,GAAIC,IAAD,IAAgB;AAC7BN,IAAAA,gBAAgB,CAACO,QAAjB,CAA0BD,IAA1B;AACAE,IAAAA,UAAU,GAFmB,CAEhB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACG,GAZD;;AAcA,QAAMA,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMT,gBAAgB,CAACU,QAAjB,EAAvB;AACAP,IAAAA,QAAQ,CAAC,MAAMM,QAAQ,CAACE,IAAT,EAAP,CAAR;AACD,GAHD;;AAKAvB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,UAAU,GADU,CACP;;AACbK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAHD,EAGG,EAHH;AAKA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAA,+CACa,QAAC,GAAD;AAAK,UAAA,GAAG,EAAEC,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCeD,G;;MAAAA,G","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport asteroid from './assets/asteroid.svg'\r\nimport { PostsList } from './PostsList'\r\nimport { Posts } from './Data'\r\nimport { PostSendForm } from './PostSendForm'\r\nimport { Post } from './types'\r\nimport { FullPost } from './types'\r\n\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 20px 15px;\r\n`\r\nconst Main = styled.section`\r\n  height: 100vh;\r\n`\r\nconst Title = styled.h1`\r\n  font-size: 56px;\r\n  line-height: 80px;\r\n  text-align: center;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 600;\r\n  background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  @media (max-width: 320px) {\r\n    margin-top: 5px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  max-width: 100%;\r\n`\r\n\r\nconst postsInteractive = new Posts()\r\n\r\nexport function App() {\r\n  const [posts, setPosts] = React.useState<FullPost[]>([])\r\n\r\n  const onSend = (post: Post) => {\r\n    postsInteractive.sendPost(post)\r\n    fetchPosts() //прост  так?\r\n    // почти, можешь ща чекнуть, что будет\r\n    // и потом подумаем, почему так. Мы упустили одну маленькую деталь, но важную\r\n    // вот тут надо обновить список постов:\r\n    // получить их с сервера    -\\___эти два действия мы уже делаем.., где?\r\n    // поместить в стейт posts  -/\r\n    // а значит тут достаточно что сделать? эм подскажи? \r\n    // раз мы уже умеем это делать, то можно переиспользовать функцию fetchPosts(), \r\n    // просто вызвав ее после отправки постов\r\n// та в смысле просто вызвать \r\n  }\r\n\r\n  const fetchPosts = async () => {\r\n    const newPosts = await postsInteractive.getPosts()\r\n    setPosts(await newPosts.json())\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchPosts() // как тут\r\n    console.log('Fetch is working')\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Main>\r\n        <Title>\r\n          Cozy Space <Img src={asteroid} alt=\"Asteroid\" />\r\n        </Title>\r\n        <PostSendForm onSend={onSend} />\r\n      </Main>\r\n      <PostsList posts={posts} />\r\n    </Wrapper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}