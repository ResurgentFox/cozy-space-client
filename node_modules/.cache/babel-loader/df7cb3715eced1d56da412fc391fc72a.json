{"ast":null,"code":"import { setWsHeartbeat } from 'ws-heartbeat/client';\nconst serverAddress = process.env.REACT_APP_URL || '127.0.0.1:3001';\nexport class Posts {\n  constructor() {\n    this.ws = void 0;\n    this.handleNewPost = void 0;\n    this.ws = new WebSocket(`ws://${serverAddress}`);\n    setWsHeartbeat(this.ws, '{\"kind\":\"ping\"}', {\n      pingTimeout: 60000,\n      pingInterval: 25000\n    });\n\n    this.ws.onmessage = event => {\n      const {\n        data\n      } = event;\n      const parsed = JSON.parse(data);\n\n      if (parsed.name && parsed.text) {\n        var _this$handleNewPost;\n\n        (_this$handleNewPost = this.handleNewPost) === null || _this$handleNewPost === void 0 ? void 0 : _this$handleNewPost.call(this, JSON.parse(event.data));\n      }\n    };\n  }\n\n  onNewPost(callback) {\n    this.handleNewPost = callback;\n  }\n\n  getPosts() {\n    return fetch(`http://${serverAddress}/get_posts`);\n  }\n\n  sendPost(post) {\n    return fetch(`http://${serverAddress}/send_post?name=${post.name}&text=${post.text}`);\n  }\n\n}","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/Data.ts"],"names":["setWsHeartbeat","serverAddress","process","env","REACT_APP_URL","Posts","constructor","ws","handleNewPost","WebSocket","pingTimeout","pingInterval","onmessage","event","data","parsed","JSON","parse","name","text","onNewPost","callback","getPosts","fetch","sendPost","post"],"mappings":"AACA,SAASA,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAZ,IAA6B,gBAAnD;AAIA,OAAO,MAAMC,KAAN,CAAY;AAIjBC,EAAAA,WAAW,GAAG;AAAA,SAHNC,EAGM;AAAA,SAFNC,aAEM;AACZ,SAAKD,EAAL,GAAU,IAAIE,SAAJ,CAAe,QAAOR,aAAc,EAApC,CAAV;AACAD,IAAAA,cAAc,CAAC,KAAKO,EAAN,EAAU,iBAAV,EAA6B;AACzCG,MAAAA,WAAW,EAAE,KAD4B;AAEzCC,MAAAA,YAAY,EAAE;AAF2B,KAA7B,CAAd;;AAIA,SAAKJ,EAAL,CAAQK,SAAR,GAAoBC,KAAK,IAAI;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAWD,KAAjB;AACA,YAAME,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAf;;AACA,UAAIC,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACI,IAA1B,EAAgC;AAAA;;AAC9B,oCAAKX,aAAL,uFAAqBQ,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,IAAjB,CAArB;AACD;AACF,KAND;AAOD;;AAEDM,EAAAA,SAAS,CAACC,QAAD,EAAqC;AAC5C,SAAKb,aAAL,GAAqBa,QAArB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAOC,KAAK,CAAE,UAAStB,aAAc,YAAzB,CAAZ;AACD;;AACDuB,EAAAA,QAAQ,CAACC,IAAD,EAAa;AACnB,WAAOF,KAAK,CAAE,UAAStB,aAAc,mBAAkBwB,IAAI,CAACP,IAAK,SAAQO,IAAI,CAACN,IAAK,EAAvE,CAAZ;AACD;;AA5BgB","sourcesContent":["import { FullPost, Post } from './types'\r\nimport { setWsHeartbeat } from 'ws-heartbeat/client'\r\n\r\nconst serverAddress = process.env.REACT_APP_URL || '127.0.0.1:3001'\r\n\r\n\r\n\r\nexport class Posts {\r\n  private ws: WebSocket\r\n  private handleNewPost?: (post: FullPost) => void \r\n  \r\n  constructor() {\r\n    this.ws = new WebSocket(`ws://${serverAddress}`)\r\n    setWsHeartbeat(this.ws, '{\"kind\":\"ping\"}', {\r\n      pingTimeout: 60000,\r\n      pingInterval: 25000, \r\n    })\r\n    this.ws.onmessage = event => { \r\n      const { data } = event\r\n      const parsed = JSON.parse(data)\r\n      if (parsed.name && parsed.text) {\r\n        this.handleNewPost?.(JSON.parse(event.data))\r\n      } \r\n    }\r\n  }\r\n\r\n  onNewPost(callback: (post: FullPost) => void) {\r\n    this.handleNewPost = callback\r\n  }\r\n\r\n  getPosts() {\r\n    return fetch(`http://${serverAddress}/get_posts`)\r\n  }\r\n  sendPost(post: Post) {\r\n    return fetch(`http://${serverAddress}/send_post?name=${post.name}&text=${post.text}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}