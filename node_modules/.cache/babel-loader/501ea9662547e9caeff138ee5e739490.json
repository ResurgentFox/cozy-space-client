{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\PostSendForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.div`\n  margin: 0 auto;\n  padding-top: 5%;\n  @media (max-width: 320px) {\n    padding-top: 5px;\n  }\n\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Form;\nconst Input = styled.input`\n  padding: 10px;\n  background-color: #746087;\n  border: 1px solid #1e1d1f;\n  border-radius: 10px;\n  outline: none;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c2 = Input;\nconst Textarea = styled.textarea`\n  min-height: 100px;\n  padding: 10px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid #1e1d1f;\n  background-color: #746087;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c3 = Textarea;\nconst Button = styled.button`\n  margin-top: 7%;\n  max-width: 120px;\n  max-height: 40px;\n  outline: none;\n  border-radius: 30px;\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\n  border: transparent;\n  color: #000;\n  font-size: 28px;\n  font-family: 'Bungee Shade', cursive;\n  font-weight: 900;\n  cursor: pointer;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition-duration: 0.5s;\n  top: 0;\n  position: relative;\n  &:hover {\n    top: 5px;\n    border: 2px solid #2efef7;\n    background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n_c4 = Button;\nconst Label = styled.label`\n  margin-top: 25px;\n  margin-bottom: 8px;\n  color: #746087;\n  font-size: 20px;\n  font-family: 'Tourney', cursive;\n`;\n_c5 = Label;\nexport function PostSendForm() {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [text, setText] = React.useState(''); // а что делать со значениями сэт? \n  // нужно завести 2 поля для храения измененных значений name и text (ну или message)\n  // используя React.useState('начальное значение, можно оставить пустую строку '' ');\n  // теперь нужно передать name как значение в Input\n  // а text в textarea, как атрибут value вроде m? оо появился\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: name,\n      onChange: e => console.log(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Share what`s in your mind\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n} // в общем, говоря просто\n// когда мы вводим текст в Input, он выззовет функцию, которую мы ей передадим через onChange\n// хоть console.log\n// чекай лог) тг\n// запусти ща, эти 2 поля должны перестать реагировать на ввод чего-либо да\n// это потому, что мы им задали фиксированный value, а их колбек об изменении никак не обрабатываем\n// у этих компонент есть атрибут onChane \n// туда нужно передать функцию, которая обрабатывает событие изменения \n// обычно это что onClick ток помню точнее блин я хз я вот события плохо знаю((\n// туда нужно передать функцию, которая обрабатывает событие изменения \n// обычно это что-то такое\n// e => e.target.value - этот value это новое значение DOM элемента, мы должны его впихнуть в наш стейт setName(e.target.value)\n// то есть полный код колбека будет такой e => setName(e.target.value)\n// попробуй\n// e от слова event\n\n_s(PostSendForm, \"1JM59PB1zOUIVyPCA/FMdENzl00=\");\n\n_c6 = PostSendForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Textarea\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"PostSendForm\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostSendForm.jsx"],"names":["React","styled","Form","div","Input","input","Textarea","textarea","Button","button","Label","label","PostSendForm","name","setName","useState","text","setText","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,I;AAYN,MAAME,KAAK,GAAGH,MAAM,CAACI,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;AAUN,MAAME,QAAQ,GAAGL,MAAM,CAACM,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,Q;AAWN,MAAME,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;MAAMD,M;AA+BN,MAAME,KAAK,GAAGT,MAAM,CAACU,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,K;AAON,OAAO,SAASE,YAAT,GAAwB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACe,QAAN,CAAe,EAAf,CAAxB,CAF2B,CAEgB;AAC7C;AACA;AACA;AACA;;AACE,sBACI,QAAC,IAAD;AAAA,4BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,IAAd;AAAoB,MAAA,QAAQ,EAAEK,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;GAjCgBJ,Y;;MAAAA,Y","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Form = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n    border: 2px solid #2efef7;\r\n    background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\nexport function PostSendForm() {\r\n    const [name, setName] = React.useState('')\r\n    const [text, setText] = React.useState('') // а что делать со значениями сэт? \r\n  // нужно завести 2 поля для храения измененных значений name и text (ну или message)\r\n  // используя React.useState('начальное значение, можно оставить пустую строку '' ');\r\n  // теперь нужно передать name как значение в Input\r\n  // а text в textarea, как атрибут value вроде m? оо появился\r\n    return ( \r\n        <Form>\r\n        <Label>Your name</Label>\r\n        <Input value={name} onChange={e => console.log(e)}/>\r\n        <Label>Share what`s in your mind</Label>\r\n        <Textarea value={text} />\r\n        <Button>go!</Button>\r\n      </Form>\r\n    )\r\n}\r\n\r\n// в общем, говоря просто\r\n// когда мы вводим текст в Input, он выззовет функцию, которую мы ей передадим через onChange\r\n// хоть console.log\r\n// чекай лог) тг\r\n// запусти ща, эти 2 поля должны перестать реагировать на ввод чего-либо да\r\n// это потому, что мы им задали фиксированный value, а их колбек об изменении никак не обрабатываем\r\n// у этих компонент есть атрибут onChane \r\n// туда нужно передать функцию, которая обрабатывает событие изменения \r\n// обычно это что onClick ток помню точнее блин я хз я вот события плохо знаю((\r\n\r\n// туда нужно передать функцию, которая обрабатывает событие изменения \r\n// обычно это что-то такое\r\n// e => e.target.value - этот value это новое значение DOM элемента, мы должны его впихнуть в наш стейт setName(e.target.value)\r\n// то есть полный код колбека будет такой e => setName(e.target.value)\r\n// попробуй\r\n// e от слова event"]},"metadata":{},"sourceType":"module"}