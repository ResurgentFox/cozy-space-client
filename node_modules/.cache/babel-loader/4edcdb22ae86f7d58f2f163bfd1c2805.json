{"ast":null,"code":"export class Posts {\n  //Это из тайпскрипта ? этот знак вопроса опцинальнео\n  // да, теперь смотри на его тип, он может быть функцией ИЛИ undefined ага\n  constructor() {\n    this.ws = void 0;\n    this.handleNewPost = void 0;\n    this.ws = new WebSocket('ws://127.0.0.1:3001/posts');\n\n    this.ws.onmessage = data => {\n      this.handleNewPost(post);\n    }; // ща тут первая ошибка из-за того, что \"КАК вызвать функцию, если ее может и не быть\"\n    // логичная \n    // теперь ерунда осталась, мы говорим вебсокету: когда придет сообщение,\n    //  то я возьму оттуда пост и вызову this.handleNewPost(post)\n\n  } // давай для начала добавим метод onNewPost((post: Post) => void) такой\n  // эта функция будет устанавливать колбек, коотоый будет вызываться при получении нового поста\n  // вот (post: Post) => void -- это то, каким должен быть колбек, он будет принимать 1 пост и ничего не возвращать\n  // мы кстати уже можем заюзать этот метод в App, го туда\n  // Аня? что? вот такое крч тут коллбек?это никакие правила не нарушает? ага, мы его будем вызывать\n  // нет, наоборот, реактивное программирование) от слова \"реакция\" на что-то (изменения/события)\n  //  эм что это это ты придумал? нет, \"реактивное прграммирование\" потом загуглить надо (тот же реакт поэтому так зовется)\n\n\n  onNewPost(callback) {\n    this.handleNewPost = callback;\n  }\n\n  getPosts() {\n    return fetch('http://127.0.0.1:3001/get_posts');\n  }\n\n  sendPost(post) {\n    return fetch(`http://127.0.0.1:3001/send_post?name=${post.name}&text=${post.text}`);\n  }\n\n}","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/Data.ts"],"names":["Posts","constructor","ws","handleNewPost","WebSocket","onmessage","data","post","onNewPost","callback","getPosts","fetch","sendPost","name","text"],"mappings":"AAEA,OAAO,MAAMA,KAAN,CAAY;AAEgC;AACjD;AAEAC,EAAAA,WAAW,GAAG;AAAA,SAJNC,EAIM;AAAA,SAHNC,aAGM;AACZ,SAAKD,EAAL,GAAU,IAAIE,SAAJ,CAAc,2BAAd,CAAV;;AACA,SAAKF,EAAL,CAAQG,SAAR,GAAqBC,IAAD,IAAU;AAAE,WAAKH,aAAL,CAAmBI,IAAnB;AAA0B,KAA1D,CAFY,CAGZ;AACA;AACA;AACA;;AACD,GAZgB,CAajB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,SAAS,CAACC,QAAD,EAAqC;AAC5C,SAAKN,aAAL,GAAqBM,QAArB;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,WAAOC,KAAK,CAAC,iCAAD,CAAZ;AACD;;AACDC,EAAAA,QAAQ,CAACL,IAAD,EAAa;AACnB,WAAOI,KAAK,CAAE,wCAAuCJ,IAAI,CAACM,IAAK,SAAQN,IAAI,CAACO,IAAK,EAArE,CAAZ;AACD;;AA5BgB","sourcesContent":["import { FullPost, Post } from './types'\r\n\r\nexport class Posts {\r\n  private ws: WebSocket\r\n  private handleNewPost?: (post: FullPost) => void //Это из тайпскрипта ? этот знак вопроса опцинальнео\r\n  // да, теперь смотри на его тип, он может быть функцией ИЛИ undefined ага\r\n  \r\n  constructor() {\r\n    this.ws = new WebSocket('ws://127.0.0.1:3001/posts')\r\n    this.ws.onmessage = (data) => { this.handleNewPost(post) }\r\n    // ща тут первая ошибка из-за того, что \"КАК вызвать функцию, если ее может и не быть\"\r\n    // логичная \r\n    // теперь ерунда осталась, мы говорим вебсокету: когда придет сообщение,\r\n    //  то я возьму оттуда пост и вызову this.handleNewPost(post)\r\n  }\r\n  // давай для начала добавим метод onNewPost((post: Post) => void) такой\r\n  // эта функция будет устанавливать колбек, коотоый будет вызываться при получении нового поста\r\n  // вот (post: Post) => void -- это то, каким должен быть колбек, он будет принимать 1 пост и ничего не возвращать\r\n  // мы кстати уже можем заюзать этот метод в App, го туда\r\n  // Аня? что? вот такое крч тут коллбек?это никакие правила не нарушает? ага, мы его будем вызывать\r\n  // нет, наоборот, реактивное программирование) от слова \"реакция\" на что-то (изменения/события)\r\n  //  эм что это это ты придумал? нет, \"реактивное прграммирование\" потом загуглить надо (тот же реакт поэтому так зовется)\r\n  onNewPost(callback: (post: FullPost) => void) {\r\n    this.handleNewPost = callback\r\n  }\r\n  getPosts() {\r\n    return fetch('http://127.0.0.1:3001/get_posts')\r\n  }\r\n  sendPost(post: Post) {\r\n    return fetch(`http://127.0.0.1:3001/send_post?name=${post.name}&text=${post.text}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}