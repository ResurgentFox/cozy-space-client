{"ast":null,"code":"const serverAddress = proces; // '127.0.0.1'\n// 'api-cozy-space.herokuapp.com'\n\nexport class Posts {\n  constructor() {\n    this.ws = void 0;\n    this.handleNewPost = void 0;\n    this.ws = new WebSocket(`ws://${serverAddress}:3001`);\n\n    this.ws.onmessage = event => {\n      var _this$handleNewPost;\n\n      (_this$handleNewPost = this.handleNewPost) === null || _this$handleNewPost === void 0 ? void 0 : _this$handleNewPost.call(this, JSON.parse(event.data));\n    };\n  }\n\n  onNewPost(callback) {\n    this.handleNewPost = callback;\n  }\n\n  getPosts() {\n    return fetch(`http://${serverAddress}:3001/get_posts`);\n  }\n\n  sendPost(post) {\n    return fetch(`http://${serverAddress}:3001/send_post?name=${post.name}&text=${post.text}`);\n  }\n\n}","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/Data.ts"],"names":["serverAddress","proces","Posts","constructor","ws","handleNewPost","WebSocket","onmessage","event","JSON","parse","data","onNewPost","callback","getPosts","fetch","sendPost","post","name","text"],"mappings":"AAEA,MAAMA,aAAa,GAAGC,MAAtB,C,CACA;AACA;;AAEA,OAAO,MAAMC,KAAN,CAAY;AAIjBC,EAAAA,WAAW,GAAG;AAAA,SAHNC,EAGM;AAAA,SAFNC,aAEM;AACZ,SAAKD,EAAL,GAAU,IAAIE,SAAJ,CAAe,QAAON,aAAc,OAApC,CAAV;;AACA,SAAKI,EAAL,CAAQG,SAAR,GAAoBC,KAAK,IAAI;AAAA;;AAC3B,kCAAKH,aAAL,uFAAqBI,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,IAAjB,CAArB;AACD,KAFD;AAGD;;AAEDC,EAAAA,SAAS,CAACC,QAAD,EAAqC;AAC5C,SAAKR,aAAL,GAAqBQ,QAArB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAOC,KAAK,CAAE,UAASf,aAAc,iBAAzB,CAAZ;AACD;;AACDgB,EAAAA,QAAQ,CAACC,IAAD,EAAa;AACnB,WAAOF,KAAK,CAAE,UAASf,aAAc,wBAAuBiB,IAAI,CAACC,IAAK,SAAQD,IAAI,CAACE,IAAK,EAA5E,CAAZ;AACD;;AApBgB","sourcesContent":["import { FullPost, Post } from './types'\r\n\r\nconst serverAddress = proces\r\n// '127.0.0.1'\r\n// 'api-cozy-space.herokuapp.com'\r\n\r\nexport class Posts {\r\n  private ws: WebSocket\r\n  private handleNewPost?: (post: FullPost) => void \r\n  \r\n  constructor() {\r\n    this.ws = new WebSocket(`ws://${serverAddress}:3001`)\r\n    this.ws.onmessage = event => { \r\n      this.handleNewPost?.(JSON.parse(event.data))\r\n    }\r\n  }\r\n\r\n  onNewPost(callback: (post: FullPost) => void) {\r\n    this.handleNewPost = callback\r\n  }\r\n\r\n  getPosts() {\r\n    return fetch(`http://${serverAddress}:3001/get_posts`)\r\n  }\r\n  sendPost(post: Post) {\r\n    return fetch(`http://${serverAddress}:3001/send_post?name=${post.name}&text=${post.text}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}