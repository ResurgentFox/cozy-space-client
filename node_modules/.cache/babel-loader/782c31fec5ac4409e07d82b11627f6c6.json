{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\network.v1\\\\cozy-space-client\\\\src\\\\PostSendForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.div`\n  margin: 0 auto;\n  padding-top: 5%;\n  @media (max-width: 320px) {\n    padding-top: 5px;\n  }\n\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Form;\nconst Input = styled.input`\n  padding: 10px;\n  background-color: #746087;\n  border: 1px solid #1e1d1f;\n  border-radius: 10px;\n  outline: none;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c2 = Input;\nconst Textarea = styled.textarea`\n  min-height: 100px;\n  padding: 10px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid #1e1d1f;\n  background-color: #746087;\n  font-family: 'Tourney', cursive;\n  font-weight: 800;\n`;\n_c3 = Textarea;\nconst Button = styled.button`\n  margin-top: 7%;\n  max-width: 120px;\n  max-height: 40px;\n  outline: none;\n  border-radius: 30px;\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\n  border: transparent;\n  color: #000;\n  font-size: 28px;\n  font-family: 'Bungee Shade', cursive;\n  font-weight: 900;\n  cursor: pointer;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition-duration: 0.5s;\n  top: 0;\n  position: relative;\n  &:hover {\n    top: 5px;\n    border: 2px solid #2efef7;\n    background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n_c4 = Button;\nconst Label = styled.label`\n  margin-top: 25px;\n  margin-bottom: 8px;\n  color: #746087;\n  font-size: 20px;\n  font-family: 'Tourney', cursive;\n`;\n_c5 = Label;\n//шо тут интересного?)))) ты тут?\n// так, когда мы пишем текст, на каком компоненте фокус? на форме отправки?\n// а конкретнее тексареа - ага\n// вот, у этого компонента и пишем обработчик\n// есть проп onKeyDown(чисто реактовская хуйня?) нет - хуйня html'a, браузера, тега\n// кстати, ошибка onKeyPress надо оо такое слышала да\n// туда надо колбкек написать, воспринимай это как обычный пропс у текстарии \nexport function PostSendForm(props) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [text, setText] = React.useState('');\n\n  const onButtonClick = () => {\n    const post = {\n      name,\n      text\n    };\n    props.onSend(post);\n    setText('');\n  }; // читаю про продвинутые типы)0 ща фанкшн? не, там более замудренный реактовский тип\n  // такой крч  окей сюда объект также писать? \n  // не, нам по сути то же самое нужно делать, не будем же копипастить одно и то же\n  // нам ща надо проверить, что нажатане любая кнопка, а именно ентер\n  // и вот еси ентер, то уже делать то, что внтури onButtonClick (или прост вызвать его)\n\n\n  const onKeyEnter = e => {\n    console.log(e.key); // напиши e точка и псмотри, какие там есть поля, связанные с кеу, а, прям key есть лол)\n    // давай будем выводит в консоль этот e.key kznm лагает не могу прокрутить методы кей писать?\n    // да, пока просто в консоль лог что писать??? console.log(e.key)\n    // запусти ща, хочу глянуть key работает с Enter \n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: \"Your name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Share what`s in your mind\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      value: text,\n      onKeyPress: onKeyEnter,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onButtonClick,\n      children: \"go!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n} // лучше по аналогии с onButtonClick делать тк стоп. ааа то событие не на кнопку влияет? \n//то есть я не могу по ентеру делать нажатие на кнопку, что б происходил хавер эффект?\n// но я же задумалась об этом)0 там прям сильно сложно? просто я так представляла в голове...\n// сложно для понимания, кода средний (не много не мало)\n// нам хватит же просто но я хочу что б эффект происходил ибо ну бля все  будут ентер нажимать и никто эффект крутой не будет видеть(((\n// я буду на кнопку нажимать :3\n// нам по сути и нужно вызвать функцию onButtonClick (ну или те же действия сделать), но только при нажатии ентера\n// хороший вопрос задаешь, ответ - можешь, но тут это не нужно \n// (чтоб триггерить хавер и проч события на другом компоненте надо знать более адвансед реакт)\n// создай стрелочную функцию под или над onButtonClick, и назови, например онЕнтер\n// можешь сразу же написать ее в пропсах текстарии в ага\n// там параметр 1 надо, обычно его е зовут - евент)) Ок\n// только он ща эни, надо тип указать, ща, я посуду помою и приду\n// тут. \n\n_s(PostSendForm, \"1JM59PB1zOUIVyPCA/FMdENzl00=\");\n\n_c6 = PostSendForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Textarea\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"PostSendForm\");","map":{"version":3,"sources":["D:/programming/network.v1/cozy-space-client/src/PostSendForm.tsx"],"names":["React","styled","Form","div","Input","input","Textarea","textarea","Button","button","Label","label","PostSendForm","props","name","setName","useState","text","setText","onButtonClick","post","onSend","onKeyEnter","e","console","log","key","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,I;AAYN,MAAME,KAAK,GAAGH,MAAM,CAACI,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;AAUN,MAAME,QAAQ,GAAGL,MAAM,CAACM,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,Q;AAWN,MAAME,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;MAAMD,M;AA+BN,MAAME,KAAK,GAAGT,MAAM,CAACU,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,K;AAWN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAT,CAAsBC,KAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMG,aAAa,GAAG,MAAM;AAC1B,UAAMC,IAAU,GAAG;AACjBN,MAAAA,IADiB;AAEjBG,MAAAA;AAFiB,KAAnB;AAKAJ,IAAAA,KAAK,CAACQ,MAAN,CAAaD,IAAb;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD,CAJyC,CAazC;AACA;AACA;AACA;AACA;;;AACA,QAAMI,UAAU,GAAIC,CAAD,IAA4B;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,GAAd,EAD6C,CAE7C;AACA;AACA;AACA;AACD,GAND;;AAQA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ,IAAd;AAAoB,MAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX,IAAjB;AAAuB,MAAA,UAAU,EAAEK,UAAnC;AAA+C,MAAA,QAAQ,EAAGC,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAlDgBP,Y;;MAAAA,Y","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Post } from './types'\r\n\r\nconst Form = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 5%;\r\n  @media (max-width: 320px) {\r\n    padding-top: 5px;\r\n  }\r\n\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: #746087;\r\n  border: 1px solid #1e1d1f;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  min-height: 100px;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  outline: none;\r\n  border: 1px solid #1e1d1f;\r\n  background-color: #746087;\r\n  font-family: 'Tourney', cursive;\r\n  font-weight: 800;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 7%;\r\n  max-width: 120px;\r\n  max-height: 40px;\r\n  outline: none;\r\n  border-radius: 30px;\r\n  background: linear-gradient(45deg, #66538f 30%, #7984e8 60%, #2d3159);\r\n  border: transparent;\r\n  color: #000;\r\n  font-size: 28px;\r\n  font-family: 'Bungee Shade', cursive;\r\n  font-weight: 900;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition-duration: 0.5s;\r\n  top: 0;\r\n  position: relative;\r\n  &:hover {\r\n    top: 5px;\r\n    border: 2px solid #2efef7;\r\n    background: linear-gradient(45deg, #41265c 33%, #2efef7 66%, #5f04b4);\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 25px;\r\n  margin-bottom: 8px;\r\n  color: #746087;\r\n  font-size: 20px;\r\n  font-family: 'Tourney', cursive;\r\n`\r\n\r\ninterface Props {\r\n  onSend: (post: Post) => void\r\n}\r\n//шо тут интересного?)))) ты тут?\r\n// так, когда мы пишем текст, на каком компоненте фокус? на форме отправки?\r\n// а конкретнее тексареа - ага\r\n// вот, у этого компонента и пишем обработчик\r\n// есть проп onKeyDown(чисто реактовская хуйня?) нет - хуйня html'a, браузера, тега\r\n// кстати, ошибка onKeyPress надо оо такое слышала да\r\n// туда надо колбкек написать, воспринимай это как обычный пропс у текстарии \r\nexport function PostSendForm(props: Props) {\r\n  const [name, setName] = React.useState('')\r\n  const [text, setText] = React.useState('')\r\n\r\n  const onButtonClick = () => {\r\n    const post: Post = {\r\n      name,\r\n      text,\r\n    }\r\n\r\n    props.onSend(post)\r\n    setText('')\r\n  }\r\n  // читаю про продвинутые типы)0 ща фанкшн? не, там более замудренный реактовский тип\r\n  // такой крч  окей сюда объект также писать? \r\n  // не, нам по сути то же самое нужно делать, не будем же копипастить одно и то же\r\n  // нам ща надо проверить, что нажатане любая кнопка, а именно ентер\r\n  // и вот еси ентер, то уже делать то, что внтури onButtonClick (или прост вызвать его)\r\n  const onKeyEnter = (e: React.KeyboardEvent) => {\r\n    console.log(e.key) \r\n    // напиши e точка и псмотри, какие там есть поля, связанные с кеу, а, прям key есть лол)\r\n    // давай будем выводит в консоль этот e.key kznm лагает не могу прокрутить методы кей писать?\r\n    // да, пока просто в консоль лог что писать??? console.log(e.key)\r\n    // запусти ща, хочу глянуть key работает с Enter \r\n  }\r\n  \r\n  return (\r\n    <Form>\r\n      <Label>Your name</Label>\r\n      <Input value={name} onChange={(e) => setName(e.target.value)} />\r\n      <Label>Share what`s in your mind</Label>\r\n      <Textarea value={text} onKeyPress={onKeyEnter} onChange={(e) => setText(e.target.value)} />\r\n      <Button onClick={onButtonClick}>go!</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\n// лучше по аналогии с onButtonClick делать тк стоп. ааа то событие не на кнопку влияет? \r\n//то есть я не могу по ентеру делать нажатие на кнопку, что б происходил хавер эффект?\r\n// но я же задумалась об этом)0 там прям сильно сложно? просто я так представляла в голове...\r\n// сложно для понимания, кода средний (не много не мало)\r\n// нам хватит же просто но я хочу что б эффект происходил ибо ну бля все  будут ентер нажимать и никто эффект крутой не будет видеть(((\r\n// я буду на кнопку нажимать :3\r\n// нам по сути и нужно вызвать функцию onButtonClick (ну или те же действия сделать), но только при нажатии ентера\r\n// хороший вопрос задаешь, ответ - можешь, но тут это не нужно \r\n// (чтоб триггерить хавер и проч события на другом компоненте надо знать более адвансед реакт)\r\n// создай стрелочную функцию под или над onButtonClick, и назови, например онЕнтер\r\n// можешь сразу же написать ее в пропсах текстарии в ага\r\n// там параметр 1 надо, обычно его е зовут - евент)) Ок\r\n// только он ща эни, надо тип указать, ща, я посуду помою и приду\r\n// тут. "]},"metadata":{},"sourceType":"module"}